//breakpoint;
alias funcNum R1;
alias currentPID R2;
if(funcNum==1) then //get pcb entry 
	alias count R3;
	count=0;
	while(count<MAX_PROC_NUM) do
		if([PROCESS_TABLE+count*16+4]==TERMINATED) then
			[PROCESS_TABLE+count*16+4]=ALLOCATED;
			[PROCESS_TABLE+count*16+14]=PAGE_TABLE_BASE+count*20;
			[PROCESS_TABLE+count*16+15]=10;
			break;
		endif;
	count=count+1;
	endwhile;
	
	R0=count;
	if(count==MAX_PROC_NUM) then
		R0=-1;
	endif;
	return;
endif;
	
if(funcNum ==2) 
then
	multipush(R1,R2);
	R1=2;
	R2=[PROCESS_TABLE+currentPID*16+11];
	call MOD_2;
	multipop(R1,R2);
//	breakpoint;
	return ;
endif;
if(funcNum ==3) 
then
	multipush(R1,R2);
	R1=4;
	R2=currentPID;
	call MOD_1;
	multipop(R1,R2);
	
	multipush(R1,R2);
	R1=2;
	R2=currentPID;
	call MOD_1;
	multipop(R1,R2);
	[PROCESS_TABLE+currentPID*16+4]=TERMINATED;
	return ;
endif;
if(funcNum ==4) 
then
	PTBR=PAGE_TABLE_BASE+currentPID*20;
	[PTBR+0]=-1;
	[PTBR+1]="0000";
	[PTBR+2]=-1;
	[PTBR+3]="0000";
	alias counter R3;
	counter =2;
	while(counter<=10) do
		if([PTBR+counter*2]!=-1) then
			multipush(R1,R2,R3);
			R1=2;
			R2=[PTBR+counter*2];
			call MOD_2;
			multipop(R1,R2,R3);
			[PTBR+counter*2]=-1;
			[PTBR+counter*2+1]="0000";
		endif;
		counter=counter+1;
	endwhile;

	counter=2;
	while(counter<=9) do
		if((counter==2||counter==3||counter==8||counter==9)&&[DISK_MAP_TABLE+counter]!=-1) then
			multipush(R1,R2,R3);
			R1=4;
			R2=[DISK_MAP_TABLE+counter];
			call MOD_2;
			multipop(R1,R2,R3);
			[DISK_MAP_TABLE+counter]=-1;

		endif;
		counter=counter+1;
	endwhile;

	return ;
endif;

	
	
